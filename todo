* document existing files (RDOC)
W review Node class, remove all plugin dependent things
W review configuration class, remove all plugin dependent things
W restructure current files, make more readable
* implement <template> meta-info tag (see template based)
* implement "creation of files only when necessary" (i.e. if dependencies have changed)
* FileCopyPlugin: check if file has changed and only then copy
* define format of config.xml
* think about how to print out warnings uniformly
* think about configureable list of files patterns which should always be ignored when reading src dir
* design Thaumature logo
* check out http://validator.w3.org/check/referer and http://jigsaw.w3.org/css-validator/check/referer

---- DONE ----

W check if an xml validator is available in ruby
W think about sequence of actions when program is executed
W think about how the data is stored in tree/which data is stored in tree
W set up directory structure and build system
W write ideas and design considerations
W create sample files to work on
W change exception mechanism to use IDs for exceptions
W update all exceptions to new exception format
W implement hooks mechanism
* enable writing of tree again after hooks mechanism installed
W implement page templates using hooks (after dir read store reference to template file in hash)
