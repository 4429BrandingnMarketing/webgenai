aHIGH PRIORITY TODO: test everything (automatically) and try to refactor!!!

* send bug report to BlueCloth/RedCloth for generated warning messages
* use File.basename(filename, '.*) to strip ext, File.extname(filename) to get ext
* add debug statements to method_added in configuration.rb
* option for includeFile tag: escapeHTML (should special html tags be escaped?)
* do not allow two or more page files in the same language, print warn
* testsite directory should cover every code line (use coverage to verify)
* use code generator to create test file with all tags and all tag parameter configurations
* get_relpath_to_node: if destNode['external'] --> check for URL pattern
* add facility to check output files on conformity to a HTML standard
* add tests for all parameters with which webgen can be called
* add different testsites (no files in it, files which are syntactical incorrect, ...)
* check out http://jigsaw.w3.org/css-validator/check/referer

---- DONE ----

W check if an xml validator is available in ruby
W think about sequence of actions when program is executed
W think about how the data is stored in tree/which data is stored in tree
W set up directory structure and build system
W write ideas and design considerations
W create sample files to work on
W change exception mechanism to use IDs for exceptions
W update all exceptions to new exception format
W implement hooks mechanism
W enable writing of tree again after hooks mechanism installed
W implement page templates using hooks (after dir read store reference to template file in hash)
W review Node class, remove all plugin dependent things
W review configuration class, remove all plugin dependent things
W check if ansi color output is better (for warnings, debug, etc), should be able to turn off
W restructure current files, make more readable
W pagePlugin.buildNode: srcName = File.basename(srcName) in front of urlName = ...
W pagePlugin.get_template_for_node: raise ... if node.nil?
W change the classes which use the listener/composite module because of the refactorization
W refactor current classes
W implement tag <relocatable> for references that should be relocatable
W FileCopyPlugin: check if file has changed and only then copy
W think about how to print out warnings uniformly --> log4r
W define format of config.yaml
W redo configuration file as yaml file
W meta tag replacer - replaces tag with contents of equally named node.metainfo entry
W add yaml page files
W add default values for configuration in configuration.rb
W create super class for page plugins
W implement "creation of files only when necessary" (i.e. if dependencies have changed)
    use modification of source and target to check if source is newer -> changed
    change the behaviour in file copy plugin
W think about configureable list of files patterns which should always be ignored when reading src dir
W replace current logging mechanism with Log4r
W implement <template> meta-info tag (see template based)
W redo tree transformer
W refacture menu tag plugin
W update default.css so that the page display correctly
N convert everything to utf8 before writing -> the file need to have the correct encoding
W better loggers for plugins (substitute real plugin name for "plugin")
N think about logging levels and when to use which level
W add multiple language support
W speed up menu creation by caching the created menu and only substituting the relative paths
W if a page in one language is in the menu, all other languages for this page should also be in the menu (-> de yaml project page, no selection in menu)
W link creation for nodes should be done only in one place (now in menu and navbar tags)
W navbar should be configurable (start tag, separator, end tag)
W command line parameter for listing all available configuration options with default values
W add check so that all needed metainfo tags are in read files
W eventually put TreeUtils methods into Node
W get_node_for_string should also work for absolute paths (ie. '/images' or '/projects/index.html')
W relocatable tag fails for "{relocatable: /images/bghack.png}" in index.xpage
W make get_relpath_to_node work for all nodes, not only page nodes
W implement meta info backing file for page file types without metainfo (e.g. html fragments)
W file name syntax: [0-9].name-with_blanks.[de].[EXTENSION] -> title: Name with blanks, Order: [0-9], Language: de
W implement order tag for setting menu order
W use rake, gem and setup.rb for installing and packaging
W prevent creation of log file if nothing is done (on -p, -e, --help...)
W put main and configuration class into the Webgen module
W use code coverage tool (-rcoverage) for checking the coverage on the testSite (use with rake)
W document existing files (RDOC)
W check out http://validator.w3.org/check/referer -> use xmllint from libxml2 package
W make file plugins case-insensitiv (convert all uppercase letters to lowercase)
W generate VERSION file when packaging
W list plugins by category instead of name (file handlers and tags should be grouped together)
W make get_node_for_string work with page files as parameters (reference in home.xpage to projects page)
W make get_node_for_string work with localized page names, i.e. /index.html/index.de.html to get the german version of the page
W add option to lang tag: showAlways -> display lang menu when only one item would appear?
W handle configuration options for tags uniformly (default configuration and per tag configuration)
W add option to menu tag: showOnlyThisSubtree -> displays only one tree to a deeper level
W redo TreeWalker -> tree should be walked separately for each registered plugin
W add virtual menu nodes for external html files
W add mechanism to document configuration parameters
W modify tag configuration so that mandatory/optional arguments for tags are supported
W add RedCloth and BlueCloth and RDOC page description files
